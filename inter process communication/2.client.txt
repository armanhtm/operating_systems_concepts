#include <stdio.h>
#include <sys/socket.h>
#include <stdlib.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <string.h>
#include <unistd.h>


#define PORT 8070

int main(int argc, char const *argv[]) {
	int sock = 0, valread;
	struct sockaddr_in serv_addr;
	char *hello = "group1 alli";
	char *goodby = "leave group1";

	char buffer[1024] = {0};
	
	if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
		printf("\n Socket creation error \n");
		return -1;
	}
	
	// sets all memory cells to zero
	memset(&serv_addr, '0', sizeof(serv_addr));
	
	
	// sets port and address family
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_port = htons(PORT);
	
	
	// Convert IPv4 and IPv6 addresses from text to binary form
	if(inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr) <= 0)
	{
		printf("\nInvalid address/ Address not supported \n");
		return -1;
	}
	
	
	
	// connects to the server
	if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)
	{
		printf("\nConnection Failed \n");
		return -1;
	}


	while(1){	
		char buffer[1024] = {0};
	    char input[20];
		fgets(input,20,stdin);
		input[strlen(input) - 1] = '\0';		
		//printf("%s\n",buffer );
		send(sock,input,strlen(input),0);
		printf("%s\n","message sent" );
		valread = read(sock, buffer, 1024);

		if (valread < 0) {
			perror("read");
			return -1;
		}
		printf("%s\n", buffer);
		if(strcmp(buffer,"good by")==0)
		break;}
		//printf("%s\n", buffer);
	
	//send(sock, hello, strlen(hello), 0);
	//send(sock, goodby, strlen(goodby), 0);

	//printf("Hello message sent\n");
	//valread = read(sock, buffer, 1024);
	
	//if (valread < 0) {
	//	perror("read");
	//	return -1;
	//}
	
	//printf("%s\n", buffer);
	
	return 0;
}